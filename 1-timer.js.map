{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst btn = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minEl = document.querySelector('[data-minutes]');\nconst secEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet intervalId = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const pickedDate = selectedDates[0];\n    const now = new Date();\n\n    if (pickedDate <= now) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        backgroundColor: ' #ef4040',\n        messageColor: 'rgb(255, 255, 255)',\n      });\n      btn.disabled = true;\n      return;\n    } else {\n      userSelectedDate = pickedDate;\n      btn.disabled = false;\n    }\n  },\n};\nflatpickr(input, options);\n\nbtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n  btn.disabled = true;\n  input.disabled = true;\n\n  intervalId = setInterval(() => {\n    const now = new Date();\n    const timeLeft = userSelectedDate - now;\n    if (timeLeft <= 0) {\n      clearInterval(intervalId);\n      updateTimer(0);\n      input.disabled = false;\n      btn.disabled = true;\n      return;\n    }\n    updateTimer(timeLeft);\n  }, 1000);\n});\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minEl.textContent = addLeadingZero(minutes);\n  secEl.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["btn","input","daysEl","hoursEl","minEl","secEl","userSelectedDate","intervalId","options","selectedDates","pickedDate","iziToast","flatpickr","timeLeft","updateTimer","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"+IAMA,MAAMA,EAAM,SAAS,cAAc,cAAc,EAC3CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAQ,SAAS,cAAc,gBAAgB,EAC/CC,EAAQ,SAAS,cAAc,gBAAgB,EAErD,IAAIC,EAAmB,KACnBC,EAAa,KAEjB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAaD,EAAc,CAAC,EAGlC,GAAIC,GAFQ,IAAI,KAEO,CACrBC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,WACV,gBAAiB,WACjB,aAAc,oBACtB,CAAO,EACDX,EAAI,SAAW,GACf,MACN,MACMM,EAAmBI,EACnBV,EAAI,SAAW,EAElB,CACH,EACAY,EAAUX,EAAOO,CAAO,EAExBR,EAAI,iBAAiB,QAAS,IAAM,CAC7BM,IACLN,EAAI,SAAW,GACfC,EAAM,SAAW,GAEjBM,EAAa,YAAY,IAAM,CAE7B,MAAMM,EAAWP,EADL,IAAI,KAEhB,GAAIO,GAAY,EAAG,CACjB,cAAcN,CAAU,EACxBO,EAAY,CAAC,EACbb,EAAM,SAAW,GACjBD,EAAI,SAAW,GACf,MACD,CACDc,EAAYD,CAAQ,CACrB,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAYC,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDb,EAAO,YAAcmB,EAAeL,CAAI,EACxCb,EAAQ,YAAckB,EAAeJ,CAAK,EAC1Cb,EAAM,YAAciB,EAAeH,CAAO,EAC1Cb,EAAM,YAAcgB,EAAeF,CAAO,CAC5C,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}